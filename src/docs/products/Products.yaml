paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron devueltos satisfactoriamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error del servidor. Usualmente generando la query o falla la conexion a la DB
    post:
      summary: Postear un nuevo producto a la base de datos
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/postProduct"
      responses:
        "200":
          description: Producto modificado exitosamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "400":
          description: Error por no cargar un archivo, codigo del producto ya existente o los campos del objeto enviado son incorrectos
  /api/products/{pid}:
    get:
      summary: Obtiene un producto
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se busca
          schema:
            $type: String
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: Error por ID incorrecto, o falla la conexion a la DB
    put:
      summary: Actualizar un producto a partir del ID, SE NECESITA PERMISO DE ADMINISTRADOR
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se busca
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/postProduct"
      responses:
        "200":
          description: Producto modificado exitosamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "404":
          description: Error por ID incorrecto, por no cargar un archivo o los campos del objeto enviado son incorrectos
    delete:
      summary: Elimina un producto con su ID, SE NECESITA PERMISO DE ADMINISTRADOR
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se desea eliminar
          schema:
            $type: String
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: Error por ID incorrecto, o falla la conexion a la DB
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success or error
        payload:
          type: object
          object: { object }
      example:
        status: success
        payload: {}
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado por mongo
        title:
          type: String
          description: nombre del producto
        description:
          type: String
          description: descripcion del producto
        price:
          type: Number
          description: precio del producto
        thumbnail:
          type: String
          description: imagen del producto
        code:
          type: String
          description: codigo del producto
        stock:
          type: Number
          description: stock del producto
        status:
          type: Boolean
          description: estado del producto
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: iphone 14 pro
        description: Esta es la descripcion del producto
        price: 4000
        thumbnail: http://localhost:8000/WEB.jpg
        code: poi988
        stock: 25
        status: true
  requestBodies:
    postProduct:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              _id:
                type: ObjectId
                description: ID auto generado por mongo
              title:
                type: string
                description: nombre del producto
              description:
                type: string
                description: descripción del producto
              price:
                type: number
                description: precio del producto
              thumbnail:
                type: object
                properties:
                  filename:
                    type: string
                    description: Nombre del archivo
                  data:
                    type: string
                    format: binary
                    description: Datos del archivo
                description: Archivo con la imagen del producto
              code:
                type: string
                description: código del producto
              stock:
                type: number
                description: stock del producto
              status:
                type: boolean
                description: estado del producto
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: iphone 14 pro
        description: Esta es la descripción del producto
        price: 4000
        thumbnail:
          filename: example.jpg
          data: base64_encoded_data_here
        code: poi988
        stock: 25
        status: true
